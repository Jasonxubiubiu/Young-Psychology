// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSCoder;

/// LeanCloud access control lists type.
/// You can use it to set access control lists on an object.
SWIFT_CLASS("_TtC9LeanCloud5LCACL")
@interface LCACL : NSObject <NSCoding, NSCopying>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCACL (SWIFT_EXTENSION(LeanCloud))
@end


/// LeanCloud list type.
/// It is a wrapper of <code>Swift.Array</code> type, used to store a list of objects.
SWIFT_CLASS("_TtC9LeanCloud7LCArray")
@interface LCArray : NSObject <NSCoding, NSCopying>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUnsafeObject:(NSArray * _Nonnull)unsafeObject;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSInteger startIndex;
@property (nonatomic, readonly) NSInteger endIndex;
- (NSInteger)indexAfter:(NSInteger)i SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCArray (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCArray * _Nonnull lcArray;
@end


/// LeanCloud boolean type.
/// It is a wrapper of <code>Swift.Bool</code> type, used to store a boolean value.
SWIFT_CLASS("_TtC9LeanCloud6LCBool")
@interface LCBool : NSObject <NSCoding, NSCopying>
@property (nonatomic, readonly) BOOL value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(BOOL)value;
- (nonnull instancetype)initWithBooleanLiteral:(BOOL)value;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCBool (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCBool * _Nonnull lcBool;
@end


/// LeanCloud data type.
/// This type can be used to represent a byte buffers.
SWIFT_CLASS("_TtC9LeanCloud6LCData")
@interface LCData : NSObject <NSCoding, NSCopying>
@property (nonatomic, readonly, copy) NSData * _Nonnull value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(NSData * _Nonnull)data;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCData (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCData * _Nonnull lcData;
@end


/// LeanCloud date type.
/// This type used to represent a point in UTC time.
SWIFT_CLASS("_TtC9LeanCloud6LCDate")
@interface LCDate : NSObject <NSCoding, NSCopying>
@property (nonatomic, readonly, copy) NSDate * _Nonnull value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(NSDate * _Nonnull)date;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCDate (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCDate * _Nonnull lcDate;
@end


/// LeanCloud dictionary type.
/// It is a wrapper of <code>Swift.Dictionary</code> type, used to store a dictionary value.
SWIFT_CLASS("_TtC9LeanCloud12LCDictionary")
@interface LCDictionary : NSObject <NSCoding, NSCopying>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUnsafeObject:(NSDictionary<NSString *, id> * _Nonnull)unsafeObject;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCDictionary (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCDictionary * _Nonnull lcDictionary;
@end


/// LeanCloud geography point type.
/// This type can be used to represent a 2D location with latitude and longitude.
SWIFT_CLASS("_TtC9LeanCloud10LCGeoPoint")
@interface LCGeoPoint : NSObject <NSCoding, NSCopying>
@property (nonatomic, readonly) double latitude;
@property (nonatomic, readonly) double longitude;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLatitude:(double)latitude longitude:(double)longitude;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCGeoPoint (SWIFT_EXTENSION(LeanCloud))
@end


/// LeanCloud null type.
/// A LeanCloud data type represents null value.
/// note:
/// This type is not a singleton type, because Swift does not support singleton well currently.
SWIFT_CLASS("_TtC9LeanCloud6LCNull")
@interface LCNull : NSObject <NSCoding, NSCopying>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCNull (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCNull * _Nonnull lcNull;
@end


/// LeanCloud number type.
/// It is a wrapper of <code>Swift.Double</code> type, used to store a number value.
SWIFT_CLASS("_TtC9LeanCloud8LCNumber")
@interface LCNumber : NSObject <NSCoding, NSCopying>
@property (nonatomic, readonly) double value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(double)value;
- (nonnull instancetype)initWithFloatLiteral:(double)value;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCNumber (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCNumber * _Nonnull lcNumber;
@end

@class LCString;
@class LCRelation;

/// LeanCloud object type.
/// It’s a compound type used to unite other types.
/// It can be extended into subclass while adding some other properties to form a new type.
/// Each object is correspond to a record in data storage.
SWIFT_CLASS("_TtC9LeanCloud8LCObject")
@interface LCObject : NSObject <NSCoding, NSCopying>
/// Access control lists.
@property (nonatomic, strong) LCACL * _Nullable ACL;
/// Object identifier.
@property (nonatomic, readonly, strong) LCString * _Nullable objectId;
@property (nonatomic, readonly, strong) LCDate * _Nullable createdAt;
@property (nonatomic, readonly, strong) LCDate * _Nullable updatedAt;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)valueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
/// Set class name of current type.
/// The default implementation returns the class name without root module.
///
/// returns:
/// The class name of current type.
+ (NSString * _Nonnull)objectClassName SWIFT_WARN_UNUSED_RESULT;
/// Register current object class manually.
+ (void)register;
/// Unset value for key.
/// \param key The key for which to unset.
///
- (void)unset:(NSString * _Nonnull)key;
/// Get relation object for key.
/// \param key The key where relationship based on.
///
///
/// returns:
/// The relation for key.
- (LCRelation * _Nonnull)relationForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Insert an object into a relation.
/// \param key The key of relation into which you want to insert the object.
///
/// \param object The object to insert.
///
- (void)insertRelation:(NSString * _Nonnull)key object:(LCObject * _Nonnull)object;
/// Remove an object from a relation.
/// \param key The key of relation from which you want to remove the object.
///
/// \param object The object to remove.
///
- (void)removeRelation:(NSString * _Nonnull)key object:(LCObject * _Nonnull)object;
@end


@interface LCObject (SWIFT_EXTENSION(LeanCloud))
@end


/// Query defines a query for objects.
SWIFT_CLASS("_TtC9LeanCloud7LCQuery")
@interface LCQuery : NSObject <NSCoding, NSCopying>
/// Object class name.
@property (nonatomic, readonly, copy) NSString * _Nonnull objectClassName;
/// Construct query with class name.
/// \param objectClassName The class name to query.
///
- (nonnull instancetype)initWithClassName:(NSString * _Nonnull)className OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
/// Get logic AND of another query.
/// Note that it only combine constraints of two queries, the limit and skip option will be discarded.
/// \param query The another query.
///
///
/// returns:
/// The logic AND of two queries.
- (LCQuery * _Nonnull)and:(LCQuery * _Nonnull)query SWIFT_WARN_UNUSED_RESULT;
/// Get logic OR of another query.
/// Note that it only combine constraints of two queries, the limit and skip option will be discarded.
/// \param query The another query.
///
///
/// returns:
/// The logic OR of two queries.
- (LCQuery * _Nonnull)or:(LCQuery * _Nonnull)query SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// LeanCloud relation type.
/// This type can be used to make one-to-many relationship between objects.
SWIFT_CLASS("_TtC9LeanCloud10LCRelation")
@interface LCRelation : NSObject <NSCoding, NSCopying>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
/// Insert a child into relation.
/// \param child The child that you want to insert.
///
- (void)insert:(LCObject * _Nonnull)child;
/// Remove a child from relation.
/// \param child The child that you want to remove.
///
- (void)remove:(LCObject * _Nonnull)child;
/// Get query of current relation.
@property (nonatomic, readonly, strong) LCQuery * _Nonnull query;
@end


@interface LCRelation (SWIFT_EXTENSION(LeanCloud))
@end


/// LeanCloud role type.
/// A type to group user for access control.
/// Conceptually, it is equivalent to UNIX user group.
SWIFT_CLASS("_TtC9LeanCloud6LCRole")
@interface LCRole : LCObject
/// Name of role.
/// The name must be unique throughout the application.
/// It will be used as key in ACL to refer the role.
@property (nonatomic, strong) LCString * _Nullable name;
/// Relation of users.
@property (nonatomic, strong) LCRelation * _Nullable users;
/// Relation of roles.
@property (nonatomic, strong) LCRelation * _Nullable roles;
+ (NSString * _Nonnull)objectClassName SWIFT_WARN_UNUSED_RESULT;
/// Create an role with name.
/// \param name The name of role.
///
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// LeanCloud string type.
/// It is a wrapper of <code>Swift.String</code> type, used to store a string value.
SWIFT_CLASS("_TtC9LeanCloud8LCString")
@interface LCString : NSObject <NSCoding, NSCopying>
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(NSString * _Nonnull)value;
- (nonnull instancetype)initWithExtendedGraphemeClusterLiteral:(NSString * _Nonnull)value;
- (nonnull instancetype)initWithStringLiteral:(NSString * _Nonnull)value;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id _Nonnull jsonValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonString;
@end


@interface LCString (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCString * _Nonnull lcString;
@end


/// LeanCloud user type.
/// A base type of LeanCloud built-in user system.
/// You can extend this class with custom properties.
/// However, LCUser can be extended only once.
SWIFT_CLASS("_TtC9LeanCloud6LCUser")
@interface LCUser : LCObject
/// Username of user.
@property (nonatomic, strong) LCString * _Nullable username;
/// Password of user.
/// note:
/// this property will not be filled in when fetched or logged in for security.
@property (nonatomic, strong) LCString * _Nullable password;
/// Email of user.
/// If the “Enable Email Verification” application option is enabled,
/// a verification email will be sent to user when user registered with an email address.
@property (nonatomic, strong) LCString * _Nullable email;
/// A flag indicates whether email is verified or not.
@property (nonatomic, readonly, strong) LCBool * _Nullable emailVerified;
/// Mobile phone number.
/// If the “Enable Mobile Phone Number Verification” application option is enabled,
/// an sms message will be sent to user’s phone when user registered with a phone number.
@property (nonatomic, strong) LCString * _Nullable mobilePhoneNumber;
/// A flag indicates whether mobile phone is verified or not.
@property (nonatomic, readonly, strong) LCBool * _Nullable mobilePhoneVerified;
/// Session token of user authenticated by server.
@property (nonatomic, readonly, strong) LCString * _Nullable sessionToken;
/// Current authenticated user.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LCUser * _Nullable current;)
+ (LCUser * _Nullable)current SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrent:(LCUser * _Nullable)value;
+ (NSString * _Nonnull)objectClassName SWIFT_WARN_UNUSED_RESULT;
/// Log out current user.
+ (void)logOut;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSArray (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCArray * _Nonnull lcArray;
@end


@interface NSData (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCData * _Nonnull lcData;
@end


@interface NSDate (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCDate * _Nonnull lcDate;
@end


@interface NSDictionary (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCDictionary * _Nonnull lcDictionary;
@end


@interface NSNull (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCNull * _Nonnull lcNull;
@end


@interface NSNumber (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCNumber * _Nonnull lcNumber;
@property (nonatomic, readonly, strong) LCBool * _Nonnull lcBool;
@end


@interface NSString (SWIFT_EXTENSION(LeanCloud))
@property (nonatomic, readonly, strong) LCString * _Nonnull lcString;
@end

#pragma clang diagnostic pop
